x-airflow-common:
  &airflow-common
  # image: apache/airflow:2.10.4
  build:
    context: ..
    dockerfile: ./docker/airflow.Dockerfile
  env_file: 
    - ./airflow.properties
  environment:
    GOOGLE_APPLICATION_CREDENTIALS: /gcp/gcloud/application_default_credentials.json
    GOOGLE_CLOUD_PROJECT: ${GOOGLE_CLOUD_PROJECT}
    CLOUDSDK_CORE_PROJECT: ${GOOGLE_CLOUD_PROJECT}
    GCP_REGION: ${GCP_REGION}
    AWS_CREDENTIALS_PATH: /opt/airflow/credentials/${AWS_CREDENTIALS_FILENAME}
  entrypoint: ./airflow-entrypoint.sh
  volumes:
    - ../src/dags:/opt/airflow/dags
    - ../src/logs:/opt/airflow/logs
    - ../src/config:/opt/airflow/config
    # airflow-GCP ADC
    - ${APPDATA}/gcloud:/gcp/gcloud
    - ./airflow-entrypoint.sh:/opt/airflow/airflow-entrypoint.sh
    # airflow-kaggle auth
    # - ../credentials/kaggle.json:/home/airflow/.kaggle/kaggle.json
    # airflow-AWS
    # - ../credentials/:/opt/airflow/credentials
    # for docker operator requied docker sesseion on local
    - //var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    airflow-postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres-source:
    build:
      context: ..
      dockerfile: ./docker/postgres-source.Dockerfile
    image: postgres-source
    container_name: postgres-container-source
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    restart: unless-stopped

  postgres-target:
    build:
      context: .
      dockerfile: postgres-target.Dockerfile
    image: postgres-target
    container_name: postgres-container-target
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: targetdb
    ports:
      - 5433:5432
    restart: unless-stopped

  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    volumes:
      - ../src/postgres-db-volume:/var/lib/postgresql/data
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: always

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    restart: always
  
  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    user: "0:0"
    command:
      - -c
      - |
        function ver() {
          printf "%04d%04d%04d%04d" $${1//./ }
        }
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID and AIRFLOW_GID environment variables, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#setting-the-right-airflow-user"
          echo
        fi
        one_meg=1048576
        mem_available=$$(($$(getconf _PHYS_PAGES) * $$(getconf PAGE_SIZE) / one_meg))
        cpus_available=$$(grep -cE 'cpu[0-9]+' /proc/stat)
        disk_available=$$(df / | tail -1 | awk '{print $$4}')
        warning_resources="false"
        if (( mem_available < 4000 )) ; then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough memory available for Docker.\e[0m"
          echo "At least 4GB of memory required. You have $$(numfmt --to iec $$((mem_available * one_meg)))"
          echo
          warning_resources="true"
        fi
        if (( cpus_available < 2 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough CPUS available for Docker.\e[0m"
          echo "At least 2 CPUs recommended. You have $${cpus_available}"
          echo
          warning_resources="true"
        fi
        if (( disk_available < one_meg * 10 )); then
          echo
          echo -e "\033[1;33mWARNING!!!: Not enough Disk space available for Docker.\e[0m"
          echo "At least 10 GBs recommended. You have $$(numfmt --to iec $$((disk_available * 1024 )))"
          echo
          warning_resources="true"
        fi
        if [[ $${warning_resources} == "true" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: You have not enough resources to run Airflow (see above)!\e[0m"
          echo "Please follow the instructions to increase amount of resources available:"
          echo "   https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#before-you-begin"
          echo
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:${AIRFLOW_GID}" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

volumes:
  postgres-db-volume: